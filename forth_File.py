import tkinter as tk
from tkinter import filedialog
import pandas as pd
import openpyxl
from tkinter.font import Font
import sys
import math
import os

if getattr(sys, 'frozen', False):
    # For executable generated by PyInstaller or cx_Freeze
    script_dir = sys._MEIPASS
else:
    # For running the script directly
    script_dir = os.path.dirname(os.path.abspath(__file__))
    
file_path1 = ""

def select_file():
    global file_path1
    file_path1 = filedialog.askopenfilename(filetypes=[("Excel Files", "*.xlsx")])
    if file_path1:
        process_file(file_path1)
        
        
def process_file(file_path):
    df = pd.read_excel(file_path)
    df = pd.read_excel(file_path)
    Code = df['Code']
    Unique_Code = df['Code'].unique()
    Unique_EmpName = df['EmpName'].unique()[0:len(Unique_Code)]
    WrkdHrs = df['WrkdHrs.']
    RMARK = df['RMARK']
    In_Hrs = df['In Hrs.']
    In_Min = df['In min']
    data = {
        'Code': [],
        'EmpName': [],
        'OT Status': [],
        'Dept.': [],
        'Date': [],
        'RMARK': [],
        'Co+':[],
        'WrkdHrs': [],
        'OT': [],
        'PH': [],
        'tot_d': [],
        'pr_d': [],
        'WO': [],
        'Late': [],
        'appl leave': [],
        'abs': [],
        'esic': [],
    }
    CO = []
    tot_d=[]
    pr_d = []
    WO = []
    PH = []
    OT = []
    leave = []
    ABS = []
    Late = []
    Esic = []
    TotalDays = 0
    Co = 0
    Ot = 0
    PR_D = 0
    ph = 0
    Wo = 0
    Leave = 0
    abs = 0
    late = 0
    esic = 0
    try:
        for i in range(len(Code) - 1):
            if(Code[i] == Code[i + 1]):
                TotalDays += 1
                if(WrkdHrs[i] > 0 and RMARK[i] == 'WO'):
                    Co += 1
                if(RMARK[i] == 'PRS'):
                    PR_D += 1
                if(RMARK[i] == 'WO' and RMARK[i] != 'PRS'):
                    Wo += 1
                if(RMARK[i] == 'APPL' and RMARK[i] != 'PRS'):
                    Leave += 1
                if(RMARK[i] == 'ABS' and RMARK[i] != 'PRS'):
                    abs += 1
                if(In_Hrs[i] > 8 and In_Min[i] > 30):
                    late += 0.166667
            elif(Code[i] != Code[i + 1]):
                TotalDays += 1
                if(WrkdHrs[i] > 0 and RMARK[i] == 'WO'):
                    Co += 1
                if(RMARK[i] == 'PRS'):
                    PR_D += 1
                if(RMARK[i] == 'WO' and RMARK[i] != 'PRS'):
                    Wo += 1
                if(RMARK[i] == 'APPL' and RMARK[i] != 'PRS'):
                    Leave += 1
                if(RMARK[i] == 'ABS' and RMARK[i] != 'PRS'):
                    abs += 1
                if(In_Hrs[i] > 8 and In_Min[i] > 30):
                    late += 0.166667
                tot_d.append(TotalDays)
                CO.append(Co)
                OT.append(Ot)
                PH.append(ph)
                WO.append(Wo)
                pr_d.append(PR_D)
                leave.append(Leave)
                ABS.append(abs)
                Late.append(late)
                Esic.append(esic)
                TotalDays = 0
                Co = 0
                PR_D = 0
                Wo = 0
                Leave = 0
                abs = 0
                late = 0
                
    except Exception as e:
        print(Code[i], Code[i + 1])
        print(e)
    df1 = pd.DataFrame(data)
    tot_d.append(None)
    CO.append(None)
    OT.append(None)
    pr_d.append(None)
    PH.append(None)
    WO.append(None)
    leave.append(None)
    ABS.append(None)
    Late.append(None)
    Esic.append(None)
    output_file_path = os.path.join(os.path.dirname(file_path), 'new_file.xlsx')
    df1['Code'] = Unique_Code
    df1['EmpName'] = Unique_EmpName
    df1['tot_d'] = tot_d
    df1['Co+'] = CO
    df1['OT'] = OT
    df1['pr_d'] = pr_d
    df1['PH'] = PH
    df1['WO'] = WO
    df1['appl leave'] = leave
    df1['abs'] = ABS
    df1['Late'] = Late
    df1['esic'] = Esic
    
    df1.at[len(df1['EmpName']) + 1, 'EmpName'] = "Grand Total"
    df1.at[len(df1['tot_d']), 'tot_d'] = df1['tot_d'].sum()
    df1.at[len(df1['OT']), 'OT'] = df1['OT'].sum()
    df1.at[len(df1['pr_d']), 'pr_d'] = df1['pr_d'].sum()
    df1.at[len(df1['PH']), 'PH'] = df1['PH'].sum()
    df1.at[len(df1['WO']), 'WO'] = df1['WO'].sum()
    df1.at[len(df1['abs']), 'abs'] = df1['abs'].sum()
    df1.at[len(df1['Late']), 'Late'] = df1['Late'].sum()
    df1.at[len(df1['esic']), 'esic'] = df1['esic'].sum()
    df1.at[len(df1['appl leave']), 'appl leave'] = df1['appl leave'].sum()
    df1.at[len(df1['Co+']), 'Co+'] = df1['Co+'].sum()
    df1.to_excel(output_file_path, index=False)
    success_label.config(text="new_file.xlsx generated successfully!")

def download_output():
    initial_file_name = "new_file.xlsx"
    output_file_path = os.path.join(os.path.dirname(file_path1), 'new_file.xlsx')
    save_file_path = filedialog.asksaveasfilename(defaultextension=".xlsx", filetypes=[("Excel Files", "*.xlsx")],
                                                 initialfile=initial_file_name)
    if save_file_path:
        os.replace(output_file_path, save_file_path)



if __name__ == "__main__":
    window = tk.Tk()
    window.geometry("500x300")
    heading_label = tk.Label(window, text="Excel file converter", font=("Arial", 16, "bold"))
    heading_label.pack()
    heading_font = Font(family="Arial", size=16, weight="bold")
    button = tk.Button(window,
    text="Select file", cursor="hand1",
    compound="top",
    font=heading_font,
    padx=10,
    pady=5,
    bd=0,
    bg="lightblue",
    fg="white",
    command=select_file,
    border="1")
    button.pack()
    
    download_button = tk.Button(window, text="Download Excel file", command=download_output,font=heading_font,
    padx=10,
    pady=5,
    bd=0,
    bg="lightblue",
    fg="white", cursor="hand1")
    download_button.pack()
    success_label = tk.Label(window, text="", fg="green")
    success_label.pack()
    window.mainloop()
