import tkinter as tk
from tkinter import filedialog
import pandas as pd
import openpyxl
from tkinter.font import Font
import sys
import math
import os

if getattr(sys, 'frozen', False):
    # For executable generated by PyInstaller or cx_Freeze
    script_dir = sys._MEIPASS
else:
    # For running the script directly
    script_dir = os.path.dirname(os.path.abspath(__file__))
    
file_path1 = ""

def select_file():
    global file_path1
    file_path1 = filedialog.askopenfilename(filetypes=[("Excel Files", "*.xlsx")])
    if file_path1:
        process_file(file_path1)


def process_file(file_path):
    df = pd.read_excel(file_path)
    row_index1 = df['Code']
    EmpName = df['EmpName']
    OT_Status = df['OT status']
    Dept = df['Dept.']
    Date = df['Date']
    In_Hrs = df['In Hrs.']
    In_Min = df['In min']
    Out_Hrs = df['Out Hrs.']
    Out_Min = df['Out min']
    RMARK = df['RMARK']
    WrkdHrs = df['WrkdHrs.']
    Site1 = df['Site-1']
    
    data = {
        'Code': [],
        'EmpName': [],
        'OT Status': [],
        'Dept.': [],
        'Date': [],
        'In Hrs': [],
        'In Mins': [],
        'Out Hrs': [],
        'Out Min': [],
        'RMARK': [],
        'WrkdHrs': [],
        'PH': [],
        'tot_d': [],
        'pr_d': [],
        'WO': [],
        'Late': [],
        'appl leave': [],
        'abs': [],
        'esic': [],
        'Site-1': [],
    }
    pr_d = []
    tot_d = []
    WO = []
    leave = []
    abs = []
    PH = []
    Late = []
    esic = []
    df1 = pd.DataFrame(data)
    print(row_index1)
    for i in range(len(row_index1) - 1):
        if(RMARK[i] == 'WO' or RMARK[i] == 'APPL' or RMARK[i] == 'ABS'):
            pr_d.append(0)
        else:
            pr_d.append(1)
        if(RMARK[i] == 'WO'):
            WO.append(1)
        else:
            WO.append(0)
        if(RMARK[i] == 'APPL'):
            leave.append(1)
        else:
            leave.append(0)
        if(RMARK[i] == 'ABS'):
            abs.append(1)
        else:
            abs.append(0)
        if(In_Hrs[i] > 8 and In_Min[i] > 30):
            Late.append(0.166667)
        else:
            Late.append(0)
        tot_d.append(1)
        PH.append(0)
        esic.append(0)
                

    output_file_path = os.path.join(os.path.dirname(file_path), 'new_file.xlsx')
    
    pr_d.append("")
    tot_d.append("")
    WO.append("")
    leave.append("")
    abs.append("")
    PH.append("")
    Late.append("")
    esic.append("")
    df1['Code'] = row_index1
    df1['EmpName'] = EmpName
    df1['OT Status'] = OT_Status
    df1['Dept.'] = Dept
    df1['Date'] = Date
    df1['In Hrs'] = In_Hrs
    df1['In Mins'] = In_Min
    df1['Out Hrs'] = Out_Hrs
    df1['Out Min'] = Out_Min
    df1['RMARK'] = RMARK
    df1['WrkdHrs'] = WrkdHrs
    df1['tot_d'] = tot_d
    df1['pr_d'] = pr_d
    df1['Site-1'] = Site1
    df1['PH'] = PH
    df1['abs'] = abs
    df1['WO'] = WO
    df1['Late'] = Late
    df1['esic'] = esic
    df1['appl leave'] = leave
    df1.to_excel(output_file_path, index=False)
    success_label.config(text="new_file.xlsx generated successfully!")

def download_output():
    initial_file_name = "new_file.xlsx"
    output_file_path = os.path.join(os.path.dirname(file_path1), 'new_file.xlsx')
    save_file_path = filedialog.asksaveasfilename(defaultextension=".xlsx", filetypes=[("Excel Files", "*.xlsx")],
                                                 initialfile=initial_file_name)
    if save_file_path:
        os.replace(output_file_path, save_file_path)



if __name__ == "__main__":
    window = tk.Tk()
    window.geometry("500x300")
    heading_label = tk.Label(window, text="Excel file converter", font=("Arial", 16, "bold"))
    heading_label.pack()
    heading_font = Font(family="Arial", size=16, weight="bold")
    button = tk.Button(window,
    text="Select file", cursor="hand1",
    compound="top",
    font=heading_font,
    padx=10,
    pady=5,
    bd=0,
    bg="lightblue",
    fg="white",
    command=select_file,
    border="1")
    button.pack()
    
    download_button = tk.Button(window, text="Download Excel file", command=download_output,font=heading_font,
    padx=10,
    pady=5,
    bd=0,
    bg="lightblue",
    fg="white", cursor="hand1")
    download_button.pack()
    success_label = tk.Label(window, text="", fg="green")
    success_label.pack()
    window.mainloop()
